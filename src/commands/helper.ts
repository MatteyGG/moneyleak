import { Keyboard } from "grammy";
import { StartMessage } from "../texts";
import { MyContext } from "../types";
import { bot } from "../bot";

bot.command("start", async (ctx: MyContext) => {
  await ctx.reply(StartMessage, {
    reply_markup: new Keyboard().text("/login").text("/help"),
  });
});

bot.command("help", async (ctx: MyContext) => {
  await ctx.reply(`üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n${StartMessage}`, {
    reply_markup: new Keyboard()
      .text("/login")
      .text("/register")
      .row()
      .text("/expense")
      .text("/income")
      .row()
      .text("/report")
      .text("/help")
      .resized(),
  });
});

bot.on("message", async (ctx) => {
  if (ctx.message.text?.startsWith("/")) {
    await ctx.reply(
      `ü§∑ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥`
    );
  }
});

bot.on("callback_query:data", async (ctx) => {
  console.warn("Unknown callback data:", ctx.callbackQuery.data);
  await ctx.answerCallbackQuery("‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –∫–Ω–æ–ø–∫–∞");
});